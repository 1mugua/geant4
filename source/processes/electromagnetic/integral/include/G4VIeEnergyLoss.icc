//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4VIeEnergyLoss.icc,v 1.1.2.2 2001/06/28 20:19:19 gunter Exp $
// GEANT4 tag $Name:  $
//
// $Id: 
// ---------------------------------------------------------------
//      GEANT 4 class inlined methods file 
//
//      History: based on object model of
//      2nd December 1995, G.Cosmo
//      ------------ G4VIeEnergyLoss physics process ------------
//                  by Laszlo Urban, 20 March 1997
// ***************************************************************
// It is the first implementation of the NEW UNIFIED ENERGY LOSS PROCESS.       
// It calculates the energy loss of e+/e-.
// -------------------------------------------------------------
//
// 27-05-98: new randomization of the Step limit , new extrapolations for
//           high/low energies. L.Urban
// 26-10-98: cleanup , L.Urban
// ---------------------------------------------------------------

inline G4bool G4VIeEnergyLoss::IsApplicable(const G4ParticleDefinition&
                                                     particle)
{
   return(   (&particle == G4Electron::Electron())
           ||(&particle == G4Positron::Positron()) );
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4double G4VIeEnergyLoss::GetContinuousStepLimit(
                                               const G4Track& track,
                                               G4double,
                                               G4double currentMinimumStep,
                                               G4double&)
{
 
  G4double Step =
    GetConstraints(track.GetDynamicParticle(),track.GetMaterial());

  if ((Step>0.0)&&(Step<currentMinimumStep)) currentMinimumStep = Step;

  return Step ;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....
